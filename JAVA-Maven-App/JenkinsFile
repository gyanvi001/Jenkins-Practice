pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:var/run/docker.sock' //mount Docker socket to access host Docker daemon
        }
    }

    stages {
        stage('Checkout') {
            steps {
                sh 'echo passed'
                //git branch: 'main', url: 'https://github.com/gyanvi01/jenkins-project.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                //build a project and create a Jar file
                sh 'cd {repo_name}/spring-boot-app && mvn clean package'

            }
        }

        stage ('Static Code Analysis') {
            environment {
                //SonarQube server URL and authentication token
                SONAR_HOST_URL = 'http://localhost:9000'
            }
            steps {
                withCredentials([string(credentialsId: 'soanrqube', variable: 'SONAR_AUTH_TOKEN')]) {
                //run SonarQube analysis
                sh 'cd{repo_name}/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_HOST_URL'
                }
            }
        }
    }
}